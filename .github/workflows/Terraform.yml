name: Terraform Deployment

on:

  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action (apply/destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    name: "Terraform ${{ github.event.inputs.action  }}"
    runs-on: ubuntu-latest

    steps:
      # Step to checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step to set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      # Step to configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step to initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: Terraform

      # Step to apply Terraform configuration if action is 'apply' or on push event
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: terraform apply --auto-approve 
        env:
          TF_VAR_TXT_OWNER_ID: ${{ secrets.TXT_OWNER_ID }}
          TF_VAR_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: Terraform  

      # Step to destroy Terraform-managed infrastructure if action is 'destroy'
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-cluster
          helm list --all-namespaces -o json | jq -r '.[] | "\(.name) \(.namespace)"' | while read name ns; do helm uninstall "$name" -n "$ns"; done
          terraform destroy --auto-approve
        env:
          TF_VAR_TXT_OWNER_ID: ${{ secrets.TXT_OWNER_ID }}
          TF_VAR_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: Terraform  
