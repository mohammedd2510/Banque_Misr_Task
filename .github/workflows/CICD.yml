name: CI/CD for Spring Boot App

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build, Test, and Deploy
    runs-on: arc-runner-set
    env:
      DOCKER_USERNAME: mosama25
      MAJOR: 1
      MINOR: 0
      PATCH: ${{ github.run_number }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # Pulls the latest code from the repository

      - name: Set up Version
        run: echo "VERSION=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_ENV

      - name: Run Checkstyle Linting
        run: ./gradlew checkstyleMain checkstyleTest
        working-directory: ./spring-boot-app
        # Runs linting to check code style violations

      - name: Upload Checkstyle Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-reports
          path: |
            ./spring-boot-app/build/reports/checkstyle/main.html
            ./spring-boot-app/build/reports/checkstyle/test.html
        # Uploads Checkstyle reports even if linting fails

      - name: Run Unit Tests
        run: ./gradlew test
        working-directory: ./spring-boot-app
        # Executes unit tests to ensure code correctness

      - name: Run SonarQube Scan
        run: ./gradlew sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./spring-boot-app
        # Analyzes code quality using SonarQube

      - name: Build Application
        run: ./gradlew build
        working-directory: ./spring-boot-app
        # Compiles and builds the Spring Boot application

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/springboot-app:v${{ env.VERSION }} .
        working-directory: ./spring-boot-app  
        # Creates a Docker image using the application build

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin
        # Authenticates with Docker Hub using stored credentials

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/springboot-app:v${{ env.VERSION }}
        # Pushes the image to Docker Hub for deployment
